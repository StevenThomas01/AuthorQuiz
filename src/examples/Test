using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;

namespace InteractAuthenticaton.Filters
{
    public class BasicAuthenticationAttribute: System.Web.Http.Filters.ActionFilterAttribute
    {

        public override void OnActionExecuting(System.Web.Http.Controllers.HttpActionContext actionContext)
        {
            if (actionContext.Request.Headers.Authorization == null)
            {
                actionContext.Response = new System.Net.Http.HttpResponseMessage(System.Net.HttpStatusCode.Unauthorized);
            }
            else
            {
                string basicAuthToken = actionContext.Request.Headers.Authorization.Parameter;
                string decodedBasicauthToken = Encoding.UTF8.GetString(Convert.FromBase64String(basicAuthToken));

                string userName = decodedBasicauthToken.Substring(0, decodedBasicauthToken.IndexOf(":"));
                string password = decodedBasicauthToken.Substring(decodedBasicauthToken.IndexOf(":") + 1);
                var apiUserName = ConfigurationManager.AppSettings["ApiUserName"];
                var apiPassword = ConfigurationManager.AppSettings["ApiPassword"];

                if (String.Compare(userName, apiUserName) != 0 && String.Compare(userName, apiUserName) != 0)
                {
                    actionContext.Response = new System.Net.Http.HttpResponseMessage(System.Net.HttpStatusCode.Unauthorized);
                }                
            }
        }

    }
}